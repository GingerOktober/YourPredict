@model App.Models.ComboModelCart

@{
    ViewBag.Title = "Корзина";
    Layout = "/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <style>
        .cart-container {
            max-width: 1200px;
            margin: 50px auto;
            padding: 20px;
            font-family: Arial, sans-serif;
        }
        .product-card {
            border-radius: 20px;
            display: grid;
            grid-template-columns: auto 1fr;
            gap: 20px;
            margin-bottom: 20px;
            border: 1px solid #000;
            padding: 10px;
            align-items: center;
            background-color: #fff;
            padding: 10px 55px;
        }

        .product-image {
            width: 100px;
            height: 100px;
            border: 1px solid #ccc;
        }

        .product-details {
            display: flex;
            flex-direction: column;
        }

        .product-name {
            font-weight: bold;
            margin-bottom: 5px;
            padding-top: 20px;
        }

        .product-price {
            margin-bottom: 5px;
            text-align: right;
        }

        .product-old-price
        {
            margin-bottom: 5px;
            text-align: right;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            padding-bottom: 20px;
        }

        .quantity-input:hover {
            cursor: pointer;
            background-color: #eee;
        }

        .quantity-input {
            width: 40px;
            text-align: center;
            border: 1px solid #ccc;
            margin: 0 5px;
        }


        .checkout-button {
            background-color: #e74c3c;
            color: #fff;
            border: none;
            padding: 10px 30px;
            cursor: pointer;
            margin-left: 5%;
            margin-top: 0.7%;
        }
        .checkout-button:hover
        {
            cursor: pointer;
                background-color: #c74c3c;
        }

        .delivery-terms {
            margin-top: 30px;
            border-top: 1px solid #ccc;
            background-color: #fff;
            padding: 10px 40px 35px;
            border-radius: 18px;
        }

        .total-price {
            background-color: #fff;
            margin-top: 20px;
            height: 50px;
            font-weight: bold;
        }

        .center-text {
            grid-column: span 4; /* Занимаем все 4 колонки в сетке */
            display: flex;
            background-color: #fff;
            justify-content: center;
            align-items: center;
            text-align: center; /* Центрирование текста по центру */
            height: 100%; /* Занимаем всю высоту контейнера .cards */
        }
    </style>
</head>
<body>

    <div class="cart-container">
        @if (Model.UserId == 0)
        {
            <div class="center-text">
                <p style="font-size: 21px; font-weight: bold;">Авторизуйтесь, чтобы увидеть содержимое своей корзины.</p>
            </div>
        }
        else if (!Model.CartData.Any(c => c.UserId == Model.UserId))
        {
            <div class="center-text">
                <p style="font-size: 24px; font-weight: bold;">В вашей корзине пока нет товаров.</p>
            </div>
        }
        else
        {
            @foreach (var elem in Model.CartData)
            {
                if(elem.UserId==Model.UserId)
                {
                    @foreach (var good in Model.GoodsData)
                    {
                        if (good.GoodId == elem.GoodId && elem.UserId == Model.UserId)
                        {
                            <div class="product-card">
                                <img class="product-image" src="@good.image_link1" alt="@good.Name">
                            <div class="product-details">
                                <div class="product-name">@good.Name</div>
                                <div class="product-price">@good.Price руб</div>
                                <div class="product-old-price"><s>@good.Old_price Руб</s></div>
                                <div class="quantity-controls">
                                    <form method="post" action="/Home/RemoveFromCart">
                                        <input type="hidden" name="goodid" value="@good.GoodId" />
                                        <button type="submit" class="remove-button">Удалить</button>
                                    </form>
                                </div>

                            </div>
                        </div>
                        }
                        }
                }
            }
        }
        @if(Model.UserId!=0)
        {
            <form action="/Home/Order" target="_blank">

                <button class="checkout-button">Оформить заказ</button>
            </form>
            <div style="text-align: right; margin-top: -25px; margin-right: 60px;">Общая сумма: $<span id="totalAmount"> 0</span></div>

        }
        <div class="delivery-terms">
            <h2 ><b>У нас есть три типа доставки:</b></h2>
            Обычная доставка до почты — она бесплатная.<br/>
            Отслеживаемая до почты — такая доставка платная, так как посылке присваивается регистрируемый номер отслеживания. Цена доставки зависит от веса и цены посылки: она высчитывается автоматически, а увидеть её можно на этапе выбора способа доставки.
            <br />Доставка в пункты выдачи — в этом случае вы сможете забрать посылку в ближайшем магазине Пятёрочка, офисе Pony Express, постаматах Пятёрочки, Халвы и в других пунктах выдачи, включая Boxberry. Такой тип доставки также платный, а цена рассчитывается автоматически на этапе выбора.
            <br />Некоторые продавцы сотрудничают с курьерскими службами, поэтому заказ могут доставить и на дом. Увы, отдельно выбрать доставку курьером или почтой сейчас нельзя.

            Кроме того, ваша посылка может облагаться НДС, таможенными пошлинами или налоговыми сборами в зависимости от законодательства страны, в которой вы живёте. Если вы не уверены, нужно ли будет оплачивать какие-либо сборы или пошлины за посылку, свяжитесь, пожалуйста, со справочной таможенной службы России.
        </div>
    </div>

    <script>

        const minusButtons = document.querySelectorAll('.minus-button');
        const plusButtons = document.querySelectorAll('.plus-button');
        const quantityInputs = document.querySelectorAll('.quantity-input');
        const totalAmountElement = document.getElementById('totalAmount');

        minusButtons.forEach((button, index) => {
            button.addEventListener('click', () => {
                if (quantityInputs[index].value > 1) {
                    quantityInputs[index].value--;
                    updateTotalPrice();
                }
            });
        });

        plusButtons.forEach((button, index) => {
            button.addEventListener('click', () => {
                quantityInputs[index].value++;
                updateTotalPrice();
            });
        });

        quantityInputs.forEach((input, index) => {
            input.addEventListener('change', () => {
                const quantity = parseInt(input.value);
                const price = productPrices[index];
                const totalPrice = quantity * price;

                updateTotalPrice();
                updateProductPrice(index, totalPrice);
            });
        });
        function updateTotalPrice() {
            totalAmountElement.textContent = calculateTotal();
        }

        function calculateTotal() {
            let total = 0;
            quantityInputs.forEach((input, index) => {
                total += parseInt(input.value) * productPrices[index];
            });
            return total;
        }

        function updateProductPrice(index, totalPrice) {
            const productPriceElements = document.querySelectorAll('.product-price');
            productPriceElements[index].textContent = $${ totalPrice };
        }
    </script>
</body>
</html>