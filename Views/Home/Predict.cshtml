@model IEnumerable<App.Models.Cards>
@using App.Models;
@{
    ViewBag.Title = "О нас";
    Layout = "/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <style>
        #container {
            margin: auto;
            width: 100%;
            height: 3150px;
        }

        .object {
            border: solid #000 2px;
            border-radius: 15px;
            width: 218px;
            height: 306px;
            left: 50.5%;
            transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            position: absolute;
            top: 330px;
            background-image: url("https://i.ibb.co/t8S3wTZ/2817-20230802222252.png");
            background-size: cover;
            transition: transform 1s;
        }
            .object.hidden {
                cursor: pointer;
            }

        .desc {
            width: 90%;
            position: absolute;
            border-radius: 30% 30% 0% 0%;
            top: 150px;
            left: 6%;
            text-align: center;
            height: 400px;
            background-color: #fff;
        }

        .frame {
            width: 90%;
            position: absolute;
            top: 500px;
            left: 6%;
            text-align: center;
            background-color: #000;
            display: flex;
        }

        .text-frame {
            width: 235px;
            margin: 7.5px;
            left: 26px;
            border-radius: 10px;
            position: relative;
            margin-top: 25px;
            padding: 350px 0px 0px 0px;
            background-color: #fff;
        }
        .btn1 {
            border: solid;
            border-color: #000;
            outline: none;
            display: inline-block;
            text-align: center;
            text-decoration: none;
            cursor: pointer;
            padding: 16px 25px;
            border-radius: 10px;
            font-family: opensans;
            color: #000;
            position: absolute;
            top: 350px;
            left: 50.5%;
            transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            background-color: #fff;
            font-size: 25px;
        }

        .btn1:hover {
            background-color: #d9d9d9;
        }
        .text1 {
            font-family: opensans;
            left: 51%;
            margin-right: -50%;
            transform: translate(-50%, 0%);
            padding: 5px;
            padding-right: 20px;
            top: 60px;
            border: none;
            float: left;
            color: #FFFFFF;
            position: relative;
            font-size: 20px;
            line-height: 35px;
            display: block;
        }
        .myDiv1
        {
            display: none;
        }
        .myDiv2 {
            display: none;
        }
        .myDiv3 {
            display: none;
        }
        .myDiv4 {
            display: none;
        }
        .myDiv5 {
            display: none;
        }
        .header
        {
            color: black
        }
        .AP
        {
            color: grey;
        }
        .description {
            padding: 0px 15px 15px 0px;
            color: black;
        }

        .banner {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            background-color: mediumpurple;
            text-align: center;
            padding: 20px;
            color: #fff;
        }

        #content-container {
            position: relative;
            margin-bottom: 100px; /* Adjust this value to match the banner's height */
        }


        .banner-text {
            font-size: 24px;
            margin-bottom: 10px;
        }

        .cta-button {
            background: linear-gradient(to bottom, #fff, rebeccapurple);
            color: #fff; /* Белый цвет текста кнопки */
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            font-size: 18px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .cta-button:hover {
                background-color: #9400D3; 
            }
    </style>
</head>
<body>
    <div class="container">
        <div class="desc">
        </div>
        <div class="frame">
            <div class="text-frame"> <h2 class="header"></h2><p class="AP"></p><p class="description"></p></div>
            <div class="text-frame"> <h2 class="header"></h2><p class="AP"></p><p class="description"></p></div>
            <div class="text-frame"> <h2 class="header"></h2><p class="AP"></p><p class="description"></p></div>
            <div class="text-frame"> <h2 class="header"></h2><p class="AP"></p><p class="description"></p></div>
            <div class="text-frame"> <h2 class="header"></h2><p class="AP"></p><p class="description"></p></div>
            </div>
        </div>
        <div class="text1">
            <h2>Узнайте, что говорят карты<br /></h2>
        </div>
        <div class="object hidden" id="object1"></div>
        <div class="object hidden" id="object2"></div>
        <div class="object hidden" id="object3"></div>
        <div class="object hidden" id="object4"></div>
        <div class="object hidden" id="object5"></div>
        <div class="object" id="object0"></div>
        <button id="btn1" class="btn1" onclick="startAnimation()">Разложить</button>
    <div id="partialContainer">
        @Html.Partial("_Partial", Model);
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>

        
        let buttonisclicked = false;

        function changeImageDelayed(object, time, ind) {
            let startTime=null;
            function changeImage(timestamp)
            {
            if (!startTime) 
            {
                startTime = timestamp;
            }
            const elapsedTime = timestamp - startTime;
            if (elapsedTime < time)
            {
                requestAnimationFrame(changeImage);
            }
            else {
                    var x = document.getElementById('myDiv1').getAttribute('data-image-link');
                    if(ind==2) {
                        var x = document.getElementById('myDiv2').getAttribute('data-image-link');
                    }
                    else if(ind==3) {
                        var x = document.getElementById('myDiv3').getAttribute('data-image-link');
                    }
                    else if(ind==4) {
                        var x = document.getElementById('myDiv4').getAttribute('data-image-link');
                    }
                    else if (ind == 5) {
                        var x = document.getElementById('myDiv5').getAttribute('data-image-link');
                    }
                    object.style.backgroundImage = `url(${x})`;
            }
            }
            requestAnimationFrame(changeImage);
        }
        function changeHeaderDelayed(header, time, ind) {
            let startTime = null;
            function changeHeader(timestamp) {
                if (!startTime) {
                    startTime = timestamp;
                }
                const elapsedTime = timestamp - startTime;
                if (elapsedTime < time) {
                    requestAnimationFrame(changeHeader);
                }
                else {
                    var x = document.getElementById('myDiv1').getAttribute('title');
                    if (ind == 2) {
                        var x = document.getElementById('myDiv2').getAttribute('title');
                    }
                    else if (ind == 3) {
                        var x = document.getElementById('myDiv3').getAttribute('title');
                    }
                    else if (ind == 4) {
                        var x = document.getElementById('myDiv4').getAttribute('title');
                    }
                    else if (ind == 5) {
                        var x = document.getElementById('myDiv5').getAttribute('title');
                    }
                    header.textContent = `${x}`;
                }
            }
            requestAnimationFrame(changeHeader);
        }
        function changeAPDelayed(AP, time, ind) {
            let startTime = null;
            function changeAP(timestamp) {
                if (!startTime) {
                    startTime = timestamp;
                }
                const elapsedTime = timestamp - startTime;
                if (elapsedTime < time) {
                    requestAnimationFrame(changeAP);
                }
                else {
                    var x = document.getElementById('myDiv1').getAttribute('arcane');
                    var y = document.getElementById('myDiv1').getAttribute('position');
                    if (ind == 2) {
                        var x = document.getElementById('myDiv2').getAttribute('arcane');
                        var y = document.getElementById('myDiv2').getAttribute('position');
                    }
                    else if (ind == 3) {
                        var x = document.getElementById('myDiv3').getAttribute('arcane');
                        var y = document.getElementById('myDiv3').getAttribute('position');
                    }
                    else if (ind == 4) {
                        var x = document.getElementById('myDiv4').getAttribute('arcane');
                        var y = document.getElementById('myDiv4').getAttribute('position');
                    }
                    else if (ind == 5) {
                        var x = document.getElementById('myDiv5').getAttribute('arcane');
                        var y = document.getElementById('myDiv5').getAttribute('position');
                    }
                    if(y=="Прямое")
                    {

                        AP.textContent = `${x}`;
                    }
                    else{
                        AP.textContent = `${x}
                        (${y})`;
                    }
                }
            }
            requestAnimationFrame(changeAP);

        }

        function changeTextDelayed(texts, time, ind) {
            let startTime = null;
            function changeText(timestamp) {
                if (!startTime) {
                    startTime = timestamp;
                }
                const elapsedTime = timestamp - startTime;
                if (elapsedTime < time) {
                    requestAnimationFrame(changeText);
                }
                else {
                    var x = document.getElementById('myDiv1').getAttribute('text');
                    if (ind == 2) {
                        var x = document.getElementById('myDiv2').getAttribute('text');
                    }
                    else if (ind == 3) {
                        var x = document.getElementById('myDiv3').getAttribute('text');
                    }
                    else if (ind == 4) {
                        var x = document.getElementById('myDiv4').getAttribute('text');
                    }
                    else if (ind == 5) {
                        var x = document.getElementById('myDiv5').getAttribute('text');
                    }
                    texts.textContent = `${x}`;
                }
            }
            requestAnimationFrame(changeText);
        }
        function changeNull(texts, time, ind) {
            let startTime = null;
            function changeText(timestamp) {
                if (!startTime) {
                    startTime = timestamp;
                }
                const elapsedTime = timestamp - startTime;
                if (elapsedTime < time) {
                    requestAnimationFrame(changeText);
                }
                else {
                    var x = " ";
                    texts.textContent = x;
                }
            }
            requestAnimationFrame(changeText);
        }
        function startAnimation() {
            
            if(buttonisclicked==true) {
                $.ajax({
                    url: '@Url.Action("_Partial", "Home")',
                    type: 'GET',
                    success: function (result) {
                        $('#partialContainer').html(result);
                    },
                    error: function () {
                        console.log('Ошибка при выполнении AJAX-запроса');
                    }
                });
                btn1.textContent = "Разложить";
                buttonisclicked = false; const header = document.querySelectorAll('.header');
                const texts = document.querySelectorAll('.description');
                const AP = document.querySelectorAll('.AP');
                const objects = document.querySelectorAll('.object.hidden');
                objects.forEach((object, index) => {
                    setTimeout(() => {
                        if (index == 0) {
                            object.style.transform = `translate(-108.5px, -154px)`;
                            object.style.backgroundImage = `url(${'https://i.ibb.co/t8S3wTZ/2817-20230802222252.png'})`;
                        }
                        if (index == 1) {
                            object.style.transform = `translate(-108.5px, -154px)`;
                            object.style.backgroundImage = `url(${'https://i.ibb.co/t8S3wTZ/2817-20230802222252.png'})`;
                        }
                        if (index == 2) {
                            object.style.transform = `translate(-108.5px, -154px)`;
                            object.style.backgroundImage = `url(${'https://i.ibb.co/t8S3wTZ/2817-20230802222252.png'})`;
                        }
                        if (index == 3) {
                            object.style.transform = `translate(-108.5px, -154px)`;
                            object.style.backgroundImage = `url(${'https://i.ibb.co/t8S3wTZ/2817-20230802222252.png'})`;
                        }
                        if (index == 4) {
                            object.style.transform = `translate(-108.5px, -154px)`;
                            object.style.backgroundImage = `url(${'https://i.ibb.co/t8S3wTZ/2817-20230802222252.png'})`;
                        }
                        if (index == 5) {
                            object.style.transform = `translate(-108.5px, -154px)`;
                            object.style.backgroundImage = `url(${'https://i.ibb.co/t8S3wTZ/2817-20230802222252.png'})`;
                        }
                    }, index * 50);
                    header.forEach((textElement, index) => {
                                if (index == 0) {
                                changeNull(textElement, 1500, 1);
                                }
                                if (index == 1) {
                                changeNull(textElement, 1500, 1);
                                }
                                if (index == 2) {
                                    changeNull(textElement, 1500, 1);
                                }
                                if (index == 3) {
                                changeNull(textElement, 1500, 1);
                                }
                                if (index == 4) {
                                changeNull(textElement, 1500, 1);
                                }
                        });
                    AP.forEach((textElement, index) => {
                                if (index == 0) {
                                changeNull(textElement, 1500, 1);
                                }
                                if (index == 1) {
                                changeNull(textElement, 1500, 1);
                                }
                                if (index == 2) {
                                changeNull(textElement, 1500, 1);
                                }
                                if (index == 3) {
                                changeNull(textElement, 1500, 1);
                                }
                                if (index == 4) {
                                changeNull(textElement, 1500, 1);
                                }
                        });
                    texts.forEach((textElement, index) => {
                                if (index == 0) {
                                changeNull(textElement, 1500, 1);
                                }
                                if (index == 1) {
                                changeNull(textElement, 1500, 1);
                                }
                                if (index == 2) {
                                    changeNull(textElement, 1500, 1);
                                }
                                if (index == 3) {
                                    changeNull(textElement, 1500, 1);
                                }
                                if (index == 4) {
                                changeNull(textElement, 1500, 1);
                                }
                        });
            });
            }
            else{
            buttonisclicked = true;
                btn1.textContent = "Собрать";
                const header = document.querySelectorAll('.header');
                const texts = document.querySelectorAll('.description');
                const AP = document.querySelectorAll('.AP');
            const objects = document.querySelectorAll('.object.hidden');
                objects.forEach((object, index) => {
                setTimeout(() => {
                    if (index == 0) {
                            object.style.transform = `translate(-607px, 200px)`;
                            changeImageDelayed(object, 1500, 1);

                    }
                    if (index == 1) {
                            object.style.transform = `translate(-357px, 200px)`;
                            changeImageDelayed(object, 1500, 2);
                    }
                    if (index == 2) {
                            object.style.transform = `translate(-107px, 200px)`;
                            changeImageDelayed(object, 1500, 3);
                }
                    if (index == 3) {
                            object.style.transform = `translate(143px, 200px)`;
                            changeImageDelayed(object, 1500, 4);
                    }
                    if (index == 4) {
                            object.style.transform = `translate(393px, 200px)`;
                            changeImageDelayed(object, 1500, 5);
                    }
                }, index * 300);
                    });
                header.forEach((header, index) => {
                    setTimeout(() => {
                        if (index == 0) {
                            changeHeaderDelayed(header, 1500, 1);
                        }
                        if (index == 1) {
                            changeHeaderDelayed(header, 1500, 2);
                        }
                        if (index == 2) {
                            changeHeaderDelayed(header, 1500, 3);
                        }
                        if (index == 3) {
                            changeHeaderDelayed(header, 1500, 4);
                        }
                        if (index == 4) {
                            changeHeaderDelayed(header, 1500, 5);
                        }
                    }, index * 300);
                });
                AP.forEach((AP, index) => {
                    setTimeout(() => {
                        if (index == 0) {
                            changeAPDelayed(AP, 1500, 1);
                        }
                        if (index == 1) {
                            changeAPDelayed(AP, 1500, 2);
                        }
                        if (index == 2) {
                            changeAPDelayed(AP, 1500, 3);
                        }
                        if (index == 3) {
                            changeAPDelayed(AP, 1500, 4);
                        }
                        if (index == 4) {
                            changeAPDelayed(AP, 1500, 5);
                        }
                    }, index * 300);
                });
                texts.forEach((texts, index) => {
                    setTimeout(() => {
                        if (index == 0) {
                            changeTextDelayed(texts, 1500, 1);
                        }
                        if (index == 1) {
                            changeTextDelayed(texts, 1500, 2);
                        }
                        if (index == 2) {
                            changeTextDelayed(texts, 1500, 3);
                        }
                        if (index == 3) {
                            changeTextDelayed(texts, 1500, 4);
                        }
                        if (index == 4) {
                            changeTextDelayed(texts, 1500, 5);
                        }
                    }, index * 300);
                });
                }

            }

    </script>
</body>
</html>


